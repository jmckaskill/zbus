include config.ninja

rule test
    command = $in -z $out || cat $out

# common simple rules
# create custom rules if you need different flags for a target

rule cc
    depfile = $out.d
    deps = gcc
    command = $cc -c $in -o $out -MD -MF $out.d $cflags
    description = CC $out

rule ld
    command = $ld $ldflags -o $out $in
    description = LD $out

rule ar
    command = rm -f $out && $ar $out $in
    description = AR $out

# dmem
build obj/dmem/vector.o: cc dmem/vector.c
build obj/dmem.a: ar obj/dmem/vector.o

# lib

build obj/lib/auth.o:       cc lib/auth.c
build obj/lib/log.o:        cc lib/log.c
build obj/lib/marshal.o:    cc lib/marshal.c
build obj/lib/message.o:    cc lib/message.c
build obj/lib/multipart.o:  cc lib/multipart.c
build obj/lib/parse.o:      cc lib/parse.c
build obj/lib/str.o:        cc lib/str.c
build obj/lib/unix.o:       cc lib/unix.c

build obj/lib.a: ar $
        obj/lib/auth.o $
        obj/lib/log.o $
        obj/lib/marshal.o $
        obj/lib/message.o $
        obj/lib/multipart.o $
        obj/lib/parse.o $
        obj/lib/str.o $
        obj/lib/unix.o $

# bus

build obj/bus/bus.o:        cc bus/bus.c
build obj/bus/main.o:       cc bus/main.c
build obj/bus/messages.o:   cc bus/messages.c
build obj/bus/msgq.o:       cc bus/msgq.c
build obj/bus/page.o:       cc bus/page.c
build obj/bus/remote.o:     cc bus/remote.c
build obj/bus/rcu.o:        cc bus/rcu.c

build bin/bus: ld $
        obj/bus/bus.o $
        obj/bus/main.o $
        obj/bus/messages.o $
        obj/bus/msgq.o $
        obj/bus/page.o $
        obj/bus/remote.o $
        obj/bus/rcu.o $
        obj/lib.a $
        obj/dmem.a $


# default targets

default bin/bus
build test: phony $



